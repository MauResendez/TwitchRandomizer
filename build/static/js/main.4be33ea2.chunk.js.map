{"version":3,"sources":["components/TitleAppBar.jsx","components/InputForm.jsx","components/Stream.jsx","components/Results.jsx","App.js","index.js"],"names":["TitleAppBar","AppBar","position","className","Toolbar","to","pathname","Typography","variant","Copyright","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","background","InputForm","classes","useState","game","setGame","viewers","setViewers","language","setLanguage","randomSubmitted","setRandomSubmitted","resultsSubmitted","setResultsSubmitted","findRandomStream","event","preventDefault","Grid","container","direction","justify","style","minHeight","push","state","Container","component","maxWidth","center","CssBaseline","onSubmit","TextField","type","required","fullWidth","id","label","name","onChange","e","target","value","autoFocus","InputProps","inputProps","min","max","onBlur","Select","native","Button","onClick","halfWidth","Box","mt","Stream","props","useHistory","location","channel","stream","loading","error","setState","useEffect","a","axios","get","response","data","user_name","findStream","height","autoplay","layout","onPlay","onReady","muted","window","reload","Results","results","setCurrentPageResults","pageNumber","setPageNumber","channelsVisited","pageCount","Math","ceil","length","displayResults","slice","map","result","GridListTile","src","thumbnail_url","alt","GridListTileBar","title","subtitle","viewer_count","console","log","findResults","paddingTop","paddingBottom","GridList","cols","Pagination","count","page","App","ThemeProvider","exact","path","render","localStorage","clear","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4be33ea2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\n\r\nimport '../styles/TitleAppBar.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction TitleAppBar() \r\n{\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" className=\"appBar\">\r\n                <Toolbar>\r\n                    {/* <a href=\"/\">\r\n                        <Typography variant=\"h6\">\r\n                            Twitch Randomizer\r\n                        </Typography>\r\n                    </a> */}\r\n                    <Link to={{pathname: '/'}}>\r\n                        <Typography variant=\"h6\">\r\n                            Twitch Randomizer\r\n                        </Typography>\r\n                    </Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleAppBar;\r\n","import React, { useState } from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport '../styles/InputForm.css';\r\n\r\nfunction Copyright() \r\n{\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Twitch Randomizer\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n      </Typography>\r\n    );\r\n}\r\n  \r\nconst useStyles = makeStyles((theme) => \r\n({\r\n  paper: \r\n  {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: \r\n  {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: \r\n  {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: \r\n  {\r\n    background: '#9146ff !important',\r\n    margin: '3px !important',\r\n  },\r\n}));\r\n\r\nfunction InputForm() \r\n{\r\n    const classes = useStyles();\r\n\r\n    const [game, setGame] = useState('');\r\n    const [viewers, setViewers] = useState('');\r\n    const [language, setLanguage] = useState('Select...');\r\n    const [randomSubmitted, setRandomSubmitted] = useState(false);\r\n    const [resultsSubmitted, setResultsSubmitted] = useState(false);\r\n\r\n    const findRandomStream = (event) => \r\n    {\r\n      event.preventDefault();\r\n\r\n      if(game && viewers == '')\r\n      {\r\n        setViewers(9999999);\r\n      }\r\n\r\n      if(language == 'Select...')\r\n      {\r\n        setLanguage(null);\r\n      }\r\n      \r\n      if(game)\r\n      {\r\n        setRandomSubmitted(true);\r\n      }\r\n    }\r\n\r\n    const findResults = (event) => \r\n    {\r\n      event.preventDefault();\r\n\r\n      if(game && viewers == '')\r\n      {\r\n        setViewers(9999999);\r\n      }\r\n\r\n      if(language == 'Select...')\r\n      {\r\n        setLanguage(null);\r\n      }\r\n      \r\n      if(game)\r\n      {\r\n        setResultsSubmitted(true);\r\n      }\r\n    }\r\n\r\n    const checkViewersInput = (event) => \r\n    {\r\n      if(event.target.value < 10 && event.target.value != \"\")\r\n      {\r\n        setViewers(10);\r\n      }\r\n      else if(event.target.value > 9999999 && event.target.value != \"\")\r\n      {\r\n        setViewers(9999999);\r\n      }\r\n      else if(event.target.value >= 10 && event.target.value != \"\")\r\n      {\r\n        setViewers(event.target.value);\r\n      }\r\n      else\r\n      {\r\n        event.target.value = '';\r\n        setViewers('');\r\n      }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\" style={{ minHeight: '85vh' }}>  \r\n            { randomSubmitted && <Redirect push to={{pathname: `/stream`, state: { game: game, viewers: viewers, language: language }}}/> }\r\n            { resultsSubmitted && <Redirect push to={{pathname: `/results`, state: { game: game, viewers: viewers, language: language }}}/> }\r\n\r\n            <Container component=\"main\" maxWidth=\"xs\" center>\r\n              <CssBaseline />\r\n              <div className={classes.paper}>\r\n                  <Typography component=\"h1\" variant=\"h5\">Twitch Randomizer</Typography>\r\n                  <form className={classes.form} onSubmit={findRandomStream}>\r\n                      <TextField variant=\"outlined\" type=\"text\" margin=\"normal\" required fullWidth id=\"game\" label=\"Game\" name=\"game\" onChange={e => setGame(e.target.value)} autoFocus/>\r\n                      <TextField variant=\"outlined\" type=\"number\" margin=\"normal\" InputProps={{ inputProps: { min: \"10\", max: \"9999999\" } }} fullWidth id=\"viewers\" label=\"Max Number of Viewers (Minimum: 10)\" name=\"viewers\" value={viewers} onChange={e => setViewers(e.target.value)} onBlur={checkViewersInput}/>\r\n                      <div id=\"select\">\r\n                        <Select native variant=\"outlined\" margin=\"normal\" fullWidth id=\"language\" label=\"Language\" name=\"language\" onChange={e => setLanguage(e.target.value)}>\r\n                          <option value={\"Select...\"}>Select...</option>\r\n                          <option value={\"en\"}>English</option>\r\n                          <option value={\"es\"}>Español (Spanish)</option>\r\n                          <option value={\"fr\"}>Français (French)</option>\r\n                          <option value={\"de\"}>Deutsch (German)</option>\r\n                          <option value={\"ja\"}>日本語 (Japanese)</option>\r\n                          <option value={\"it\"}>Italiano (Italian)</option>\r\n                          <option value={\"pt\"}>Português (Portuguese)</option>\r\n                          <option value={\"ru\"}>русский (Russian)</option>\r\n                          <option value={\"nl\"}>Nederlands (Dutch)</option>\r\n                          <option value={\"tr\"}>Türkçe (Turkish)</option>\r\n                        </Select>\r\n                      </div>\r\n                      <div id=\"inputButtons\">\r\n                        <Button type=\"submit\" onClick={findRandomStream} halfWidth variant=\"contained\" color=\"primary\" className={classes.submit}>Find A Random Stream</Button>\r\n                        <Button onClick={findResults} halfWidth variant=\"contained\" color=\"primary\" className={classes.submit}>View Results</Button>\r\n                      </div>\r\n                  </form>\r\n              </div>\r\n              <Box mt={8}>\r\n                  <Copyright />\r\n              </Box>\r\n            </Container>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default InputForm;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router'\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport ReactTwitchEmbedVideo from \"react-twitch-embed-video\";\r\n\r\nimport '../styles/Stream.css';\r\n\r\nconst useStyles = makeStyles((theme) => \r\n({\r\n    submit: \r\n    {\r\n      background: '#9146ff !important',\r\n      margin: '3px !important',\r\n    },\r\n}));\r\n\r\nfunction Stream(props) \r\n{\r\n    const classes = useStyles();\r\n\r\n    const history = useHistory();\r\n\r\n    const [game, setGame] = useState(props.location.state.game);\r\n    const [viewers, setViewers] = useState(props.location.state.viewers);\r\n    const [language, setLanguage] = useState(props.location.state.language);\r\n    const [channel, setChannel] = useState(props.location.state.channel);\r\n    const [{ stream, loading, error }, setState] = useState({ stream: null, loading: true, error: null });\r\n\r\n    useEffect(() => \r\n    {\r\n        const findStream = async (game, viewers, language) =>\r\n        {\r\n            try \r\n            {\r\n                if(channel)\r\n                {\r\n                    setState({ stream: channel, loading: false, ...error });\r\n                }\r\n                else\r\n                {\r\n                    const response = await axios.get(`/api/stream/game=${game}&viewers=${viewers}&language=${language}`);\r\n    \r\n                    setState({ stream: response.data.user_name, loading: false, ...error });\r\n                }\r\n\r\n                // else if(localStorage.getItem('results') === null || localStorage.getItem('results') === [])\r\n                // {\r\n                //     console.log(\"HEY\");\r\n\r\n                //     const response = await axios.get(`/api/results/game=${game}&viewers=${viewers}&language=${language}`);\r\n\r\n                //     let randomNumber = Math.floor(Math.random() * response.data.length);\r\n\r\n                //     localStorage.setItem('results', JSON.stringify(response.data));\r\n                //     localStorage.setItem('oldresults', JSON.stringify(JSON.parse(localStorage.getItem('results')).filter(result => result.type === \"live\")));\r\n\r\n                //     setState({ stream: JSON.parse(localStorage.getItem('results'))[randomNumber].user_name, loading: false, ...error });\r\n                // }\r\n                // else\r\n                // {\r\n                //     console.log(\"HI\");\r\n\r\n                //     localStorage.setItem('results', JSON.stringify(JSON.parse(localStorage.getItem('results')).filter(result => result.type === \"live\")));\r\n                //     // localStorage.setItem('newresults', JSON.stringify(JSON.parse(localStorage.getItem('results')).filter(result => result.type === \"live\")));\r\n\r\n                //     let randomNumber = Math.floor(Math.random() * JSON.parse(localStorage.getItem('results')).length);\r\n\r\n                //     setState({ stream: JSON.parse(localStorage.getItem('results'))[randomNumber].user_name, loading: false, ...error });\r\n                // }\r\n            } \r\n            catch (err) \r\n            {\r\n                setState({ ...stream, loading: false, error: err });\r\n            }; \r\n        }\r\n          \r\n        if(loading) \r\n        {\r\n            findStream(game, viewers, language);\r\n        }\r\n\r\n    }, [stream, loading, error])\r\n\r\n    return (\r\n        <Container>\r\n            {loading && \r\n                <div id=\"loader\">\r\n                    <Loader\r\n                        type=\"Puff\"\r\n                        color=\"#00BFFF\"\r\n                        height={100}\r\n                        width={100}\r\n                    />\r\n                </div>\r\n            }\r\n\r\n            {!loading && stream &&\r\n                <Container id=\"stream\">\r\n                    <ReactTwitchEmbedVideo autoFocus\r\n                        autoplay\r\n                        channel={stream}\r\n                        layout=\"video-with-chat\"\r\n                        width=\"940\"\r\n                        height=\"480\"\r\n                        onPlay={function noRefCheck(){}}\r\n                        onReady={function noRefCheck(){}}\r\n                        muted=\"false\"\r\n                        theme=\"dark\"\r\n                    />\r\n                </Container>\r\n            }\r\n\r\n            {!stream && !loading &&\r\n                <div id=\"streamError\">\r\n                    <h1>Error: No stream found</h1>\r\n                </div>\r\n            }\r\n\r\n            {!loading &&\r\n                <div id=\"streamButtons\">\r\n                    <Link to={{pathname: `/stream`, state: { game: game, viewers: viewers, language: language, channel: null }}} onClick={() => window.location.reload()}>\r\n                        <Button type=\"button\" halfWidth variant=\"contained\" color=\"primary\" className={classes.submit}>Find Another Stream</Button>\r\n                    </Link>\r\n                    <Link to={{pathname: `/`}}>\r\n                        <Button type=\"button\" halfWidth variant=\"contained\" color=\"primary\" className={classes.submit}>Home</Button>\r\n                    </Link>\r\n                </div>\r\n            }\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Stream;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { Container } from '@material-ui/core';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport '../styles/Results.css';\r\n\r\nconst useStyles = makeStyles((theme) => \r\n({\r\n    submit: \r\n    {\r\n        background: '#9146ff !important',\r\n        margin: '3px !important',\r\n    },\r\n}));\r\n\r\nfunction Results(props) \r\n{\r\n    const classes = useStyles();\r\n\r\n    const [game, setGame] = useState(props.location.state.game);\r\n    const [viewers, setViewers] = useState(props.location.state.viewers);\r\n    const [language, setLanguage] = useState(props.location.state.language);\r\n\r\n    const [{ results, loading, error }, setState] = useState({ results: [], loading: true, error: null });\r\n    const [currentPageResults, setCurrentPageResults] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n    const channelsPerPage = 50;\r\n    const channelsVisited = (pageNumber - 1) * channelsPerPage;\r\n\r\n    const pageCount = Math.ceil(results.length / channelsPerPage);\r\n\r\n    const displayResults = results.slice(channelsVisited, channelsVisited + channelsPerPage).map((result) => \r\n    {\r\n        return (\r\n            <GridListTile component={Link} to={{pathname: `/stream`, state: { game: game, viewers: viewers, language: language, channel: result.user_name }}}>\r\n                <img src={result.thumbnail_url} alt=\"Thumbnail\"/>\r\n                <GridListTileBar\r\n                    title={result.title}\r\n                    subtitle={<span>{result.user_name} ({result.viewer_count} viewers)</span>}\r\n                />\r\n            </GridListTile>\r\n        );\r\n    });\r\n\r\n    useEffect(() => \r\n    {\r\n        const findResults = async (game, viewers) =>\r\n        {\r\n            try \r\n            {\r\n                const response = await axios.get(`/api/results/game=${game}&viewers=${viewers}&language=${language}`);\r\n\r\n                console.log(response.data);\r\n\r\n                setState({ results: response.data, loading: false, ...error });\r\n                setCurrentPageResults(response.data.slice(channelsVisited, channelsVisited + channelsPerPage));\r\n                // setPageCount(Math.ceil(response.data.length / channelsPerPage));\r\n            } \r\n            catch (err) \r\n            {\r\n                setState({ ...results, loading: false, error: err });\r\n            }; \r\n        }\r\n          \r\n        if(loading) \r\n        {\r\n            findResults(game, viewers);\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n            <div>\r\n                {loading && \r\n                    <div id=\"loader\">\r\n                        <Loader\r\n                            type=\"Puff\"\r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                {results.length == 0 && !loading &&\r\n                    <div id=\"resultsError\">\r\n                        <h1>Error: No results found</h1>\r\n                    </div>\r\n                }\r\n\r\n                {results.length != 0 && !loading &&\r\n                    <Container style={{paddingTop: \"50px\", paddingBottom: \"50px\"}}>\r\n                        <GridList container cols={5}>\r\n                            {displayResults}\r\n                        </GridList>\r\n                        <div className=\"pagination\">\r\n                            <Pagination count={pageCount} page={pageNumber} onChange={(event, value) => { setPageNumber(value); }}/>\r\n                        </div>\r\n                    </Container>\r\n                }\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Results;\r\n","import './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport TitleAppBar from './components/TitleAppBar';\nimport InputForm from './components/InputForm';\nimport Stream from './components/Stream';\nimport Results from './components/Results';\n\nfunction App() \n{\n  const deleteStorage = () =>\n  {\n    localStorage.clear();\n  }\n\n  return (\n    <ThemeProvider>\n      <CssBaseline style={{height: '100vh'}}>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Router>\n              <TitleAppBar/>\n              <Route exact path=\"/\" render={deleteStorage} component={InputForm}/>\n              <Route exact path=\"/stream\" component={Stream}/>\n              <Route exact path=\"/results\" component={Results} />\n            </Router>\n          </div>   \n        </div>\n      </CssBaseline>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}