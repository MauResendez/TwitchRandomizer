{"version":3,"sources":["components/TitleAppBar.jsx","data/data.js","components/InputForm.jsx","components/Stream.jsx","components/Results.jsx","components/ProtectedRoute.jsx","components/NotFound.jsx","App.jsx","index.js"],"names":["TitleAppBar","AppBar","position","className","Toolbar","to","pathname","Typography","variant","data","Copyright","color","align","Link","Date","getFullYear","useStyles","makeStyles","theme","form","width","marginTop","spacing","InputForm","classes","useState","game","setGame","inputGame","setInputGame","open","setOpen","viewers","setViewers","language","setLanguage","randomSubmitted","setRandomSubmitted","resultsSubmitted","setResultsSubmitted","useEffect","localStorage","clear","setItem","findRandomStream","event","preventDefault","games","Grid","container","direction","alignItems","justify","style","minHeight","push","id","Container","component","maxWidth","center","onSubmit","Autocomplete","onOpen","onClose","value","onChange","inputValue","onInputChange","options","freeSolo","renderInput","params","TextField","required","label","name","autoFocus","type","margin","InputProps","inputProps","min","max","fullWidth","e","target","onBlur","Select","native","Button","onClick","halfWidth","Box","mt","Stream","getItem","channel","setChannel","stream","loading","error","setState","findStream","a","axios","get","response","randomNumber","Math","floor","random","length","JSON","stringify","parse","user_login","isLiveAndOnGame","results","splice","height","autoplay","layout","onPlay","onReady","removeItem","window","location","reload","withWidth","props","screenWidth","setCurrentPageResults","pageNumber","setPageNumber","channelsVisited","pageCount","ceil","cols","isWidthUp","displayResults","slice","map","result","GridListTile","src","thumbnail_url","alt","GridListTileBar","title","subtitle","user_name","viewer_count","findResults","paddingTop","paddingBottom","GridList","Pagination","count","page","ProtectedRoute","Component","rest","render","state","from","NotFound","App","exact","path","Results","ReactDOM","document","getElementById"],"mappings":"qTAuBeA,MAjBf,WAEI,OACI,8BACI,cAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAU,SAApC,SACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAMC,GAAI,CAACC,SAAU,KAArB,SACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,oC,iGCbXC,EACb,CACI,gBACA,oBACA,WACA,gCACA,yBACA,eACA,SACA,gBACA,MACA,OACA,gBACA,YACA,sBACA,aACA,cACA,aACA,mCACA,+BACA,yBACA,wBACA,QACA,eACA,aACA,oBACA,sBACA,mCACA,mCACA,UACA,iBACA,gBACA,iBACA,aACA,OACA,mBACA,YACA,YACA,YACA,wBACA,yBACA,SACA,uBACA,qBACA,aACA,qBACA,UACA,+BACA,YACA,aACA,mBACA,UACA,UACA,mBACA,qBACA,kBACA,2BACA,eACA,WACA,kBACA,4BACA,gBACA,cACA,eACA,UACA,iBACA,iCACA,YACA,kBACA,iBACA,aACA,yBACA,mBACA,qBACA,sBACA,QACA,oBACA,gBACA,cACA,oCACA,cACA,WACA,gBACA,oBACA,iBACA,YACA,gBACA,0BACA,oCACA,gBACA,+BACA,oBACA,gBACA,+BACA,aACA,gBACA,uBACA,oBACA,yBACA,sBACA,eACA,iBACA,4BACA,sBACA,gCACA,yBACA,6BACA,kBACA,WACA,YACA,kBACA,wBACA,mBACA,UACA,qBACA,WACA,YACA,SACA,uBACA,eACA,uBACA,cACA,YACA,WACA,gBACA,gBACA,eACA,YACA,wCACA,qBACA,gBACA,0BACA,+BACA,mBACA,4BACA,QACA,+BACA,cACA,sBACA,kBACA,uBACA,wBACA,kBACA,2BACA,kBACA,kBACA,gBACA,WACA,SACA,gBACA,gBACA,YACA,OACA,QACA,uBACA,iBACA,4BACA,WACA,wBACA,uBACA,QACA,QACA,QACA,gCACA,iBACA,aACA,aACA,YACA,SACA,aACA,eACA,YACA,iBACA,iBACA,mBACA,uCACA,iBACA,sBACA,sBACA,uBACA,oBACA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","file":"static/js/main.084de617.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\n\r\nimport '../styles/TitleAppBar.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction TitleAppBar() \r\n{\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" className=\"appBar\">\r\n                <Toolbar>\r\n                    <Link to={{pathname: '/'}}>\r\n                        <Typography variant=\"h6\">\r\n                            Twitch Random\r\n                        </Typography>\r\n                    </Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleAppBar;\r\n","export const data = \r\n[\r\n    \"7 Days to Die\",\r\n    \"Age of Empires II\",\r\n    \"Among Us\",\r\n    \"Animal Crossing: New Horizons\",\r\n    \"Anime Studio Simulator\",\r\n    \"Apex Legends\",\r\n    \"Arcade\",\r\n    \"Ark:  Evolved\",\r\n    \"Art\",\r\n    \"ASMR\",\r\n    \"Battlefield V\",\r\n    \"Bayonetta\",\r\n    \"Black Desert Online\",\r\n    \"Bloodborne\",\r\n    \"Bloons TD 6\",\r\n    \"Brawlhalla\",\r\n    \"Call of Duty: Black Ops Cold War\",\r\n    \"Call Of Duty: Modern Warfare\",\r\n    \"Call of Duty: Vanguard\",\r\n    \"Call of Duty: Warzone\",\r\n    \"Chess\",\r\n    \"Clash Royale\",\r\n    \"Clone Hero\",\r\n    \"Conqueror's Blade\",\r\n    \"Cookie Run: Kingdom\",\r\n    \"Counter-Strike: Global Offensive\",\r\n    \"Crash Bandicoot: N. Sane Trilogy\",\r\n    \"Cuphead\",\r\n    \"Cyberpunk 2077\",\r\n    \"Dark Souls II\",\r\n    \"Dark Souls III\",\r\n    \"Dark Souls\",\r\n    \"DayZ\",\r\n    \"Dead by Daylight\",\r\n    \"DEATHLOOP\",\r\n    \"Deltarune\",\r\n    \"Destiny 2\",\r\n    \"Detroit: Become Human\",\r\n    \"Diablo II: Resurrected\",\r\n    \"Dota 2\",\r\n    \"Dragon Ball FighterZ\",\r\n    \"Dungeons & Dragons\",\r\n    \"Epic Seven\",\r\n    \"Escape from Tarkov\",\r\n    \"F1 2021\",\r\n    \"Fall Guys: Ultimate Knockout\",\r\n    \"Fallout 4\",\r\n    \"Fallout 76\",\r\n    \"Fate/Grand Order\",\r\n    \"FIFA 21\",\r\n    \"FIFA 22\",\r\n    \"Final Fantasy IV\",\r\n    \"Final Fantasy VIII\",\r\n    \"Final Fantasy X\",\r\n    \"Final Fantasy XIV Online\",\r\n    \"Food & Drink\",\r\n    \"Fortnite\",\r\n    \"Forza Horizon 4\",\r\n    \"Friday the 13th: The Game\",\r\n    \"Games + Demos\",\r\n    \"Garry's Mod\",\r\n    \"Gartic Phone\",\r\n    \"Gears 5\",\r\n    \"Genshin Impact\",\r\n    \"GeoGuesser - Explore the World\",\r\n    \"GeoGuessr\",\r\n    \"Getting Over It\",\r\n    \"God of War III\",\r\n    \"God of War\",\r\n    \"Golf With Your Friends\",\r\n    \"Goose Goose Duck\",\r\n    \"Grand Theft Auto V\",\r\n    \"Guilty Gear: Strive\",\r\n    \"Hades\",\r\n    \"Halo 5: Guardians\",\r\n    \"Halo Infinite\",\r\n    \"Halo: Reach\",\r\n    \"Halo: The Master Chief Collection\",\r\n    \"Hearthstone\",\r\n    \"HITMAN 3\",\r\n    \"Hollow Knight\",\r\n    \"Horizon Zero Dawn\",\r\n    \"Hunt: Showdown\",\r\n    \"Jump King\",\r\n    \"Just Chatting\",\r\n    \"Kena: Bridge of Spirits\",\r\n    \"Kingdom Hearts HD 1.5 + 2.5 ReMIX\",\r\n    \"Knockout City\",\r\n    \"League of Legends: Wild Rift\",\r\n    \"League of Legends\",\r\n    \"Left 4 Dead 2\",\r\n    \"Life is Strange: True Colors\",\r\n    \"Mad Father\",\r\n    \"Madden NFL 22\",\r\n    \"Magic: The Gathering\",\r\n    \"Makers & Crafting\",\r\n    \"Mario Golf: Super Rush\",\r\n    \"Mario Kart 8 Deluxe\",\r\n    \"Mario Kart 8\",\r\n    \"Mario Kart Wii\",\r\n    \"Mario Kart: Double Dash!!\",\r\n    \"Marvel's Spider-Man\",\r\n    \"Mass Effect Legendary Edition\",\r\n    \"Metroid: Samus Returns\",\r\n    \"Microsoft Flight Simulator\",\r\n    \"Midnight Cinema\",\r\n    \"Miitopia\",\r\n    \"Minecraft\",\r\n    \"MLB The Show 21\",\r\n    \"Monster Hunter: World\",\r\n    \"Mortal Kombat 11\",\r\n    \"Mystery\",\r\n    \"Naraka: Bladepoint\",\r\n    \"NBA 2K22\",\r\n    \"New World\",\r\n    \"NHL 21\",\r\n    \"Ninja Gaiden Sigma 2\",\r\n    \"No Man's Sky\",\r\n    \"Old School RuneScape\",\r\n    \"Outer Wilds\",\r\n    \"Overwatch\",\r\n    \"Paladins\",\r\n    \"Path of Exile\",\r\n    \"PGA TOUR 2K21\",\r\n    \"Phasmophobia\",\r\n    \"PICO PARK\",\r\n    \"Plants vs. Zombies 2: It's About Time\",\r\n    \"Pokémon Emerald\",\r\n    \"Pokémon GO\",\r\n    \"Pokémon Sword/Shield\",\r\n    \"Pokémon Trading Card Game\",\r\n    \"Pokémon Unite\",\r\n    \"Pokémon: Diamond/Pearl\",\r\n    \"Poker\",\r\n    \"Pools, Hot Tubs, and Beaches\",\r\n    \"PUBG Mobile\",\r\n    \"PUBG: BATTLEGROUNDS\",\r\n    \"Ragnarok Online\",\r\n    \"Raid: Shadow Legends\",\r\n    \"Red Dead Redemption 2\",\r\n    \"Resident Evil 2\",\r\n    \"Resident Evil 3: Nemesis\",\r\n    \"Resident Evil 3\",\r\n    \"Resident Evil 4\",\r\n    \"Rhythm & Game\",\r\n    \"RimWorld\",\r\n    \"Roblox\",\r\n    \"Rocket League\",\r\n    \"Rogue Company\",\r\n    \"RuneScape\",\r\n    \"Rust\",\r\n    \"Sable\",\r\n    \"Science & Technology\",\r\n    \"Sea of Thieves\",\r\n    \"Sekiro: Shadows Die Twice\",\r\n    \"Sentient\",\r\n    \"Silent Hill: Downpour\",\r\n    \"Slender: The Arrival\",\r\n    \"Slots\",\r\n    \"SMITE\",\r\n    \"SNKRX\",\r\n    \"Software and Game Development\",\r\n    \"Special Events\",\r\n    \"Spelunky 2\",\r\n    \"Splatoon 2\",\r\n    \"Splitgate\",\r\n    \"Sports\",\r\n    \"Standoff 2\",\r\n    \"StarCraft II\",\r\n    \"StarCraft\",\r\n    \"Stardew Valley\",\r\n    \"Stream Raiders\",\r\n    \"Street Fighter V\",\r\n    \"Super Mario 3D World + Bowser's Fury\",\r\n    \"Super Mario 64\",\r\n    \"Super Mario Maker 2\",\r\n    \"Super Mario Odyssey\",\r\n    \"Super Mario Sunshine\",\r\n    \"Super Mario World\",\r\n    \"Super Smash Bros. Melee\",\r\n    \"Super Smash Bros. Ultimate\",\r\n    \"Talk Shows & Podcasts\",\r\n    \"Team Fortress 2\",\r\n    \"Teamfight Tactics\",\r\n    \"Tekken 7\",\r\n    \"Terraria\",\r\n    \"Tetris\",\r\n    \"The Elder Scrolls III: Morrowind\",\r\n    \"The Elder Scrolls Online\",\r\n    \"The Elder Scrolls V: Skyrim\",\r\n    \"The Forest\",\r\n    \"The Last of Us Part II\",\r\n    \"The Legend of Zelda: A Link to the Past\",\r\n    \"The Legend of Zelda: Breath of the Wild\",\r\n    \"The Legend of Zelda: Majora's Mask\",\r\n    \"The Legend of Zelda: Ocarina of Time\",\r\n    \"The Legend of Zelda: Skyward Sword HD\",\r\n    \"The Sims 4\",\r\n    \"The Witcher 3: Wild Hunt\",\r\n    \"Tibia\",\r\n    \"Timberborn\",\r\n    \"Tom Clancy's Rainbow Six Siege\",\r\n    \"Tom Clancy's The Division 2\",\r\n    \"Tricky Towers\",\r\n    \"Twitch Plays\",\r\n    \"Undertale\",\r\n    \"UNO\",\r\n    \"Untitled Goose Game\",\r\n    \"Valheim\",\r\n    \"VALORANT\",\r\n    \"Vampire: The Masquerade - Bloodhunt\",\r\n    \"Virtual Casino\",\r\n    \"VRChat\",\r\n    \"War Thunder\",\r\n    \"Warcraft III\",\r\n    \"Warframe\",\r\n    \"WarioWare: Get It Together!\",\r\n    \"World of Tanks\",\r\n    \"World of Warcraft\",\r\n    \"World of Warships\",\r\n    \"World War Z: Aftermath\",\r\n    \"WWE 2K19\",\r\n    \"XCOM: Enemy Unknown\",\r\n    \"Yu-Gi-Oh! Duel Links\",\r\n    \"Yu-Gi-Oh! Forbidden Memories\"\r\n]\r\n\r\n// export const data = [\"1\",\"2\",\"3\",\"4\",\"5\"]","import React, { useState, useEffect } from 'react';\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Box, Button, Container, Grid, Link, Select, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { data } from '../data/data.js'\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport '../styles/InputForm.css';\r\n\r\nfunction Copyright() \r\n{\r\n    return (\r\n      <Typography variant='body2' color='textSecondary' align='center'>\r\n        {'Copyright © '}\r\n        <Link color='inherit'>\r\n          Twitch Random\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n      </Typography>\r\n    );\r\n}\r\n  \r\nconst useStyles = makeStyles((theme) => \r\n({\r\n  form: \r\n  {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction InputForm() \r\n{\r\n    const classes = useStyles();\r\n\r\n    const [game, setGame] = useState('');\r\n    const [inputGame, setInputGame] = useState('');\r\n    const [open, setOpen] = useState(false)\r\n    const [viewers, setViewers] = useState(9999999);\r\n    const [language, setLanguage] = useState('Select...');\r\n    const [randomSubmitted, setRandomSubmitted] = useState(false);\r\n    const [resultsSubmitted, setResultsSubmitted] = useState(false);\r\n\r\n    useEffect(() => // When starting/refreshing the page, remove all previous data so the user can fill in the data to their liking\r\n    {\r\n      localStorage.clear();\r\n    }, []);\r\n\r\n    useEffect(() => // Everytime one of the three variables has been changed, update the localstorage to their latest value\r\n    {\r\n      localStorage.setItem('game', game);\r\n      localStorage.setItem('viewers', viewers);\r\n      localStorage.setItem('language', language);\r\n    }, [game, viewers, language]);\r\n\r\n    const findRandomStream = (event) => \r\n    {\r\n      event.preventDefault();\r\n\r\n      if(language === 'Select...')\r\n      {\r\n        setLanguage(null);\r\n      }\r\n      \r\n      if(game)\r\n      {\r\n        setRandomSubmitted(true);\r\n      }\r\n    }\r\n\r\n    const findResults = (event) => \r\n    {\r\n      event.preventDefault();\r\n\r\n      if(language === 'Select...')\r\n      {\r\n        setLanguage(null);\r\n      }\r\n      \r\n      if(game)\r\n      {\r\n        setResultsSubmitted(true);\r\n      }\r\n    }\r\n\r\n    const checkViewersInput = (event) => \r\n    {\r\n      if(event.target.value < 10 && event.target.value !== '') // If the viewer amount is set less than 10, then set it to 10\r\n      {\r\n        setViewers(10);\r\n      }\r\n      else if(event.target.value > 9999999 && event.target.value !== '') // If the viewer amount is set higher than 9999999, then set it to 9999999 (Max Amount)\r\n      {\r\n        setViewers(9999999);\r\n      }\r\n      else if(event.target.value >= 10 && event.target.value !== '') // If the viewer count is equal or more than 10, set the viewers to the number\r\n      {\r\n        setViewers(event.target.value);\r\n      }\r\n      else // If the user left it blank, assume that they want to view any streamer, no matter the viewer count\r\n      {\r\n        setViewers(9999999);\r\n      }\r\n    }\r\n\r\n    const games = data\r\n\r\n    return (\r\n        <Grid container spacing={0} direction='column' alignItems='center' justify='center' style={{ minHeight: '91.5vh' }}>  \r\n            { randomSubmitted && <Redirect push to={{pathname: `/stream`}}/> }\r\n            { resultsSubmitted && <Redirect push to={{pathname: `/results`}}/> }\r\n\r\n            <div id=\"formIntro\">\r\n              <Typography variant='h5'><strong>Twitch Random</strong></Typography>\r\n              <Typography>Find new streamers to watch based on your language and favorite games</Typography>\r\n            </div>\r\n            \r\n            <Container component='main' maxWidth='xs' center>  \r\n              <form className={classes.form} onSubmit={findRandomStream}>\r\n                  <Autocomplete\r\n                    open={open}\r\n                    onOpen={() => \r\n                    {\r\n                      if(inputGame) \r\n                      {\r\n                        setOpen(true);\r\n                      }\r\n                    }}\r\n                    onClose={() => setOpen(false)}\r\n                    value={game}\r\n                    onChange={(event, game) => \r\n                    {\r\n                      setGame(game);\r\n                    }}\r\n                    inputValue={inputGame}\r\n                    onInputChange={(event, inputGame) => \r\n                    {\r\n                      setInputGame(inputGame);\r\n\r\n                      if(!inputGame) \r\n                      {\r\n                        setOpen(false);\r\n                      }\r\n                    }}\r\n                    options={games}\r\n                    freeSolo\r\n                    renderInput={(params) => <TextField {...params} variant='outlined' required id='game' label='Game' name='game' autoFocus/>}\r\n                  />\r\n                  <TextField variant='outlined' type='number' margin='normal' InputProps={{ inputProps: { min: '10', max: '9999999' } }} fullWidth id='viewers' label='Number of Viewers (Minimum: 10)' name='viewers' onChange={e => setViewers(e.target.value)} onBlur={checkViewersInput}/>\r\n                  <div id='select'>\r\n                    <Select native variant='outlined' margin='normal' fullWidth id='language' label='Language' name='language' onChange={e => setLanguage(e.target.value)}>\r\n                      <option value={'Select...'}>Select Language...</option>\r\n                      <option value={'en'}>English</option>\r\n                      <option value={'es'}>Español (Spanish)</option>\r\n                      <option value={'fr'}>Français (French)</option>\r\n                      <option value={'de'}>Deutsch (German)</option>\r\n                      <option value={'ja'}>日本語 (Japanese)</option>\r\n                      <option value={'it'}>Italiano (Italian)</option>\r\n                      <option value={'pt'}>Português (Portuguese)</option>\r\n                      <option value={'ru'}>русский (Russian)</option>\r\n                      <option value={'nl'}>Nederlands (Dutch)</option>\r\n                      <option value={'tr'}>Türkçe (Turkish)</option>\r\n                    </Select>\r\n                  </div>\r\n                  <div id='inputButtons'>\r\n                    <Button type='submit' onClick={findRandomStream} halfWidth variant='contained' color='primary' className='submit'>Find A Random Stream</Button>\r\n                    <Button onClick={findResults} halfWidth variant='contained' color='primary' className='submit'>View Results</Button>\r\n                  </div>\r\n              </form>\r\n              <Box mt={8}>\r\n                  <Copyright />\r\n              </Box>\r\n            </Container>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default InputForm;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport Loader from \"react-loader-spinner\";\r\nimport ReactTwitchEmbedVideo from \"react-twitch-embed-video\";\r\n\r\nimport '../styles/Stream.css';\r\n\r\nfunction Stream() \r\n{\r\n    const [game, setGame] = useState(localStorage.getItem('game'));\r\n    const [viewers, setViewers] = useState(localStorage.getItem('viewers'));\r\n    const [language, setLanguage] = useState(localStorage.getItem('language'));\r\n    const [channel, setChannel] = useState(localStorage.getItem('channel'));\r\n    const [{ stream, loading, error }, setState] = useState({ stream: null, loading: true, error: null });\r\n\r\n    function Refresh() \r\n    {\r\n        localStorage.removeItem('channel');\r\n        setChannel(null);\r\n        window.location.reload();\r\n    }\r\n\r\n    useEffect(() => \r\n    {\r\n        const findStream = async (game, viewers, language) =>\r\n        {\r\n            try \r\n            {\r\n                if(channel) // If you clicked on a stream from the Results page, it'll set up the stream to be that one\r\n                {\r\n                    setState({ stream: channel, loading: false, ...error });\r\n                }\r\n                else if(localStorage.getItem('results') === null || localStorage.getItem('results') === []) // If you first started searching, \r\n                {                                                                                           // it'll retrieve results and pick a random stream from there\r\n\r\n                    const response = await axios.get(`/api/results/game=${game}&viewers=${viewers}&language=${language}`);\r\n\r\n                    let randomNumber = Math.floor(Math.random() * response.data.length);\r\n\r\n                    localStorage.setItem('results', JSON.stringify(response.data));\r\n\r\n                    setState({ stream: JSON.parse(localStorage.getItem('results'))[randomNumber].user_login, loading: false, ...error });\r\n                }\r\n                else // If you already have results, it'll go back to the results array and choose another stream from there\r\n                {\r\n                    let randomNumber;\r\n                    let isLiveAndOnGame = false;\r\n\r\n                    while(isLiveAndOnGame === false) // Have a loop in case some streams from the array have stop streaming\r\n                    {\r\n                        randomNumber = Math.floor(Math.random() * JSON.parse(localStorage.getItem('results')).length);\r\n\r\n                        let results = JSON.parse(localStorage.getItem('results'));\r\n\r\n                        isLiveAndOnGame = await axios.get(`/api/stream/streamer=${results[randomNumber].user_login}&game=${game}`); // Checks to see if you found a streamer\r\n                                                                                                                                    // That's live and on the game you're searching for\r\n                        if(isLiveAndOnGame === false) // If you found a streamer that's not live anymore, remove the streamer from the results and start finding another one\r\n                        {\r\n                            results.splice(randomNumber, 1);\r\n                            localStorage.setItem('results', JSON.stringify(results));\r\n                        }\r\n                    }\r\n\r\n                    setState({ stream: JSON.parse(localStorage.getItem('results'))[randomNumber].user_login, loading: false, ...error });\r\n                }\r\n            } \r\n            catch (err) \r\n            {\r\n                setState({ ...stream, loading: false, error: err });\r\n            }; \r\n        }\r\n          \r\n        if(loading) // If loading state is true (When you're first starting searching)\r\n        {\r\n            findStream(game, viewers, language);\r\n        }\r\n\r\n    }, [stream, loading, error])\r\n\r\n    return (\r\n        <Grid container spacing={0} direction='column' alignItems='center' justify='center' style={{ minHeight: '91.5vh' }}>  \r\n            <Container component='main' center>\r\n                {loading && \r\n                    <div id=\"streamLoader\">\r\n                        <Loader\r\n                            type=\"Puff\"\r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                {stream && !loading &&\r\n                    <div id=\"stream\">\r\n                        <ReactTwitchEmbedVideo \r\n                            autoFocus\r\n                            autoplay\r\n                            channel={stream}\r\n                            layout=\"video-with-chat\"\r\n                            onPlay={function noRefCheck(){}}\r\n                            onReady={function noRefCheck(){}}\r\n                            theme=\"dark\"\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                {!stream && !loading &&\r\n                    <div id=\"streamError\">\r\n                        <h1>Error: No stream found</h1>\r\n                    </div>\r\n                }\r\n\r\n                {!loading &&\r\n                    <div id=\"streamButtons\">\r\n                        <Link to={{pathname: `/stream`}} onClick={Refresh}>\r\n                            <Button type=\"button\" halfWidth variant=\"contained\" color=\"primary\" className=\"submit\">Find Another Stream</Button>\r\n                        </Link>\r\n                        <Link to={{pathname: `/`}}>\r\n                            <Button type=\"button\" halfWidth variant=\"contained\" color=\"primary\" className=\"submit\">Home</Button>\r\n                        </Link>\r\n                    </div>\r\n                } \r\n            </Container>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Stream;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Container, Grid, GridList, GridListTile, GridListTileBar } from '@material-ui/core';\r\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nimport '../styles/Results.css';\r\n\r\nfunction Results(props) \r\n{\r\n    const [game, setGame] = useState(localStorage.getItem('game'));\r\n    const [viewers, setViewers] = useState(localStorage.getItem('viewers'));\r\n    const [language, setLanguage] = useState(localStorage.getItem('language'));\r\n\r\n    const [{ results, loading, error }, setState] = useState({ results: [], loading: true, error: null });\r\n    const [currentPageResults, setCurrentPageResults] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n    const channelsPerPage = 50;\r\n    const channelsVisited = (pageNumber - 1) * channelsPerPage;\r\n\r\n    const pageCount = Math.ceil(results.length / channelsPerPage);\r\n\r\n    function getCols(screenWidth) \r\n    {\r\n        if (isWidthUp('lg', screenWidth)) \r\n        {\r\n          return 5;\r\n        }\r\n  \r\n        if (isWidthUp('md', screenWidth)) \r\n        {\r\n          return 4;\r\n        }\r\n\r\n        if (isWidthUp('sm', screenWidth)) \r\n        {\r\n          return 2;\r\n        }\r\n  \r\n        return 1;\r\n      }\r\n  \r\n      const cols = getCols(props.width); // width is associated when using withWidth()\r\n\r\n    const displayResults = results.slice(channelsVisited, channelsVisited + channelsPerPage).map((result) => \r\n    {\r\n        return (\r\n            <GridListTile component={Link} to={{pathname: `/stream` }} onClick={() => localStorage.setItem('channel', result.user_login)}>\r\n                 <img src={result.thumbnail_url} alt='Thumbnail'/>\r\n                <GridListTileBar title={result.title} subtitle={<span>{result.user_name} ({result.viewer_count} viewers)</span>}/>\r\n            </GridListTile>\r\n        );\r\n    });\r\n\r\n    useEffect(() => \r\n    {\r\n        localStorage.removeItem('channel');\r\n\r\n        const findResults = async (game, viewers) =>\r\n        {\r\n            try \r\n            {\r\n                const response = await axios.get(`/api/results/game=${game}&viewers=${viewers}&language=${language}`);\r\n\r\n                setState({ results: response.data, loading: false, ...error });\r\n                setCurrentPageResults(response.data.slice(channelsVisited, channelsVisited + channelsPerPage));\r\n            } \r\n            catch (err) \r\n            {\r\n                setState({ ...results, loading: false, error: err });\r\n            }; \r\n        }\r\n          \r\n        if(loading) \r\n        {\r\n            findResults(game, viewers);\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n            <Grid container spacing={0} direction='column' alignItems='center' justify='center' style={{ minHeight: '91.5vh' }}>  \r\n                {loading && \r\n                    <div id='resultsLoader'>\r\n                        <Loader\r\n                            type='Puff'\r\n                            color='#00BFFF'\r\n                            height={100}\r\n                            width={100}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                {results.length === 0 && !loading &&\r\n                    <div id='resultsError'>\r\n                        <h1>Error: No results found</h1>\r\n                    </div>\r\n                }\r\n\r\n                {results.length !== 0 && !loading &&\r\n                    <Container style={{paddingTop: '50px', paddingBottom: '50px'}}>\r\n                        <GridList container cols={cols}>\r\n                            {displayResults}\r\n                        </GridList>\r\n                        <div className='pagination'>\r\n                            <Pagination count={pageCount} page={pageNumber} onChange={(event, value) => { setPageNumber(value); }}/>\r\n                        </div>\r\n                    </Container>\r\n                }\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default withWidth()(Results);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({ component: Component, ...rest }) \r\n{\r\n    let game = localStorage.getItem('game');\r\n\r\n    return (\r\n        <Route {...rest} render={ props => \r\n            (\r\n                game !== '' \r\n                ? \r\n                (\r\n                    <Component  {...props} />\r\n                ) \r\n                : \r\n                (\r\n                    <Redirect to={{pathname: '/', state: { from: props.location }}}/>\r\n                )\r\n            )} \r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\n\r\nimport '../styles/NotFound.css';\r\n\r\nfunction NotFound() \r\n{\r\n    return (\r\n        <div id='NotFound'>\r\n            <h1>404 - Not Found!</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport TitleAppBar from './components/TitleAppBar';\r\nimport InputForm from './components/InputForm';\r\nimport Stream from './components/Stream';\r\nimport Results from './components/Results';\r\nimport ProtectedRoute from './components/ProtectedRoute';\r\nimport NotFound from './components/NotFound';\r\n\r\nimport './App.css';\r\n\r\nfunction App() \r\n{\r\n  return (\r\n        <div className='App' style={{height: '100vh'}}>\r\n          <div className='container'>\r\n            <Router>\r\n              <TitleAppBar/>\r\n              <Switch>\r\n                <Route exact path='/' component={InputForm}/>\r\n                <ProtectedRoute exact path='/stream' component={Stream} />\r\n                <ProtectedRoute exact path='/results' component={Results} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Router>\r\n          </div>   \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}