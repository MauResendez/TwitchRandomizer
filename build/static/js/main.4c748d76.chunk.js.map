{"version":3,"sources":["components/TitleAppBar.jsx","components/InputForm.jsx","components/Stream.jsx","components/Results.jsx","components/ProtectedRoute.jsx","components/NotFound.jsx","App.js","index.js"],"names":["TitleAppBar","AppBar","position","className","Toolbar","to","pathname","Typography","variant","Copyright","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","InputForm","classes","useState","game","setGame","viewers","setViewers","language","setLanguage","randomSubmitted","setRandomSubmitted","resultsSubmitted","setResultsSubmitted","useEffect","localStorage","clear","setItem","findRandomStream","event","preventDefault","Grid","container","direction","justify","style","minHeight","push","state","Container","component","maxWidth","center","CssBaseline","onSubmit","TextField","type","margin","required","fullWidth","id","label","name","onChange","e","target","value","autoFocus","InputProps","inputProps","min","max","onBlur","Select","native","Button","onClick","halfWidth","Box","mt","Stream","props","getItem","channel","setChannel","stream","loading","error","setState","a","axios","get","response","randomNumber","Math","floor","random","data","length","JSON","stringify","parse","user_login","isLiveAndOnGame","results","console","log","splice","findStream","height","autoplay","layout","onPlay","onReady","removeItem","window","location","reload","Results","setCurrentPageResults","pageNumber","setPageNumber","channelsVisited","pageCount","ceil","displayResults","slice","map","result","GridListTile","src","thumbnail_url","alt","GridListTileBar","title","subtitle","user_name","viewer_count","findResults","paddingTop","paddingBottom","GridList","cols","Pagination","count","page","ProtectedRoute","Component","rest","render","from","NotFound","App","ThemeProvider","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4c748d76.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\n\r\nimport '../styles/TitleAppBar.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction TitleAppBar() \r\n{\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" className=\"appBar\">\r\n                <Toolbar>\r\n                    {/* <a href=\"/\">\r\n                        <Typography variant=\"h6\">\r\n                            Twitch Randomizer\r\n                        </Typography>\r\n                    </a> */}\r\n                    <Link to={{pathname: '/'}}>\r\n                        <Typography variant=\"h6\">\r\n                            Twitch Randomizer\r\n                        </Typography>\r\n                    </Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleAppBar;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport '../styles/InputForm.css';\r\n\r\nfunction Copyright() \r\n{\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Twitch Randomizer\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n      </Typography>\r\n    );\r\n}\r\n  \r\nconst useStyles = makeStyles((theme) => \r\n({\r\n  paper: \r\n  {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: \r\n  {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction InputForm() \r\n{\r\n    const classes = useStyles();\r\n\r\n    const [game, setGame] = useState('');\r\n    const [viewers, setViewers] = useState('');\r\n    const [language, setLanguage] = useState('Select...');\r\n    const [randomSubmitted, setRandomSubmitted] = useState(false);\r\n    const [resultsSubmitted, setResultsSubmitted] = useState(false);\r\n\r\n    useEffect(() =>\r\n    {\r\n      localStorage.clear();\r\n    }, []);\r\n\r\n    useEffect(() =>\r\n    {\r\n      localStorage.setItem('game', game);\r\n      localStorage.setItem('viewers', viewers);\r\n      localStorage.setItem('language', language);\r\n    }, [game, viewers, language]);\r\n\r\n    const findRandomStream = (event) => \r\n    {\r\n      event.preventDefault();\r\n\r\n      if(game && viewers === '')\r\n      {\r\n        setViewers(9999999);\r\n      }\r\n\r\n      if(language === 'Select...')\r\n      {\r\n        setLanguage(null);\r\n      }\r\n      \r\n      if(game)\r\n      {\r\n        setRandomSubmitted(true);\r\n      }\r\n    }\r\n\r\n    const findResults = (event) => \r\n    {\r\n      event.preventDefault();\r\n\r\n      if(game && viewers === '')\r\n      {\r\n        setViewers(9999999);\r\n      }\r\n\r\n      if(language === 'Select...')\r\n      {\r\n        setLanguage(null);\r\n      }\r\n      \r\n      if(game)\r\n      {\r\n        localStorage.setItem('game', game);\r\n        localStorage.setItem('viewers', viewers);\r\n        localStorage.setItem('language', language);\r\n        setResultsSubmitted(true);\r\n      }\r\n    }\r\n\r\n    const checkViewersInput = (event) => \r\n    {\r\n      if(event.target.value < 10 && event.target.value !== \"\")\r\n      {\r\n        setViewers(10);\r\n      }\r\n      else if(event.target.value > 9999999 && event.target.value !== \"\")\r\n      {\r\n        setViewers(9999999);\r\n      }\r\n      else if(event.target.value >= 10 && event.target.value !== \"\")\r\n      {\r\n        setViewers(event.target.value);\r\n      }\r\n      else\r\n      {\r\n        event.target.value = '';\r\n        setViewers('');\r\n      }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\" style={{ minHeight: '85vh' }}>  \r\n            { randomSubmitted && <Redirect push to={{pathname: `/stream`, state: { game: game, viewers: viewers, language: language }}}/> }\r\n            { resultsSubmitted && <Redirect push to={{pathname: `/results`, state: { game: game, viewers: viewers, language: language }}}/> }\r\n\r\n            <Container component=\"main\" maxWidth=\"xs\" center>\r\n              <CssBaseline />\r\n              <div className={classes.paper}>\r\n                  <Typography component=\"h1\" variant=\"h5\">Twitch Randomizer</Typography>\r\n                  <form className={classes.form} onSubmit={findRandomStream}>\r\n                      <TextField variant=\"outlined\" type=\"text\" margin=\"normal\" required fullWidth id=\"game\" label=\"Game\" name=\"game\" onChange={e => setGame(e.target.value)} autoFocus/>\r\n                      <TextField variant=\"outlined\" type=\"number\" margin=\"normal\" InputProps={{ inputProps: { min: \"10\", max: \"9999999\" } }} fullWidth id=\"viewers\" label=\"Max Number of Viewers (Minimum: 10)\" name=\"viewers\" value={viewers} onChange={e => setViewers(e.target.value)} onBlur={checkViewersInput}/>\r\n                      <div id=\"select\">\r\n                        <Select native variant=\"outlined\" margin=\"normal\" fullWidth id=\"language\" label=\"Language\" name=\"language\" onChange={e => setLanguage(e.target.value)}>\r\n                          <option value={\"Select...\"}>Select...</option>\r\n                          <option value={\"en\"}>English</option>\r\n                          <option value={\"es\"}>Español (Spanish)</option>\r\n                          <option value={\"fr\"}>Français (French)</option>\r\n                          <option value={\"de\"}>Deutsch (German)</option>\r\n                          <option value={\"ja\"}>日本語 (Japanese)</option>\r\n                          <option value={\"it\"}>Italiano (Italian)</option>\r\n                          <option value={\"pt\"}>Português (Portuguese)</option>\r\n                          <option value={\"ru\"}>русский (Russian)</option>\r\n                          <option value={\"nl\"}>Nederlands (Dutch)</option>\r\n                          <option value={\"tr\"}>Türkçe (Turkish)</option>\r\n                        </Select>\r\n                      </div>\r\n                      <div id=\"inputButtons\">\r\n                        <Button type=\"submit\" onClick={findRandomStream} halfWidth variant=\"contained\" color=\"primary\" className=\"submit\">Find A Random Stream</Button>\r\n                        <Button onClick={findResults} halfWidth variant=\"contained\" color=\"primary\" className=\"submit\">View Results</Button>\r\n                      </div>\r\n                  </form>\r\n              </div>\r\n              <Box mt={8}>\r\n                  <Copyright />\r\n              </Box>\r\n            </Container>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default InputForm;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport ReactTwitchEmbedVideo from \"react-twitch-embed-video\";\r\n\r\nimport '../styles/Stream.css';\r\n\r\nfunction Stream(props) \r\n{\r\n    // const [game, setGame] = useState(props.location.state.game);\r\n    // const [viewers, setViewers] = useState(props.location.state.viewers);\r\n    // const [language, setLanguage] = useState(props.location.state.language);\r\n    // const [channel, setChannel] = useState(props.location.state.channel);\r\n\r\n    const [game, setGame] = useState(localStorage.getItem('game'));\r\n    const [viewers, setViewers] = useState(localStorage.getItem('viewers'));\r\n    const [language, setLanguage] = useState(localStorage.getItem('language'));\r\n    const [channel, setChannel] = useState(localStorage.getItem('channel'));\r\n    const [{ stream, loading, error }, setState] = useState({ stream: null, loading: true, error: null });\r\n\r\n    function Refresh() \r\n    {\r\n        localStorage.removeItem('channel');\r\n        setChannel(null);\r\n        window.location.reload();\r\n    }\r\n\r\n    useEffect(() => \r\n    {\r\n        const findStream = async (game, viewers, language) =>\r\n        {\r\n            try \r\n            {\r\n                if(channel)\r\n                {\r\n                    setState({ stream: channel, loading: false, ...error });\r\n                }\r\n                else if(localStorage.getItem('results') === null || localStorage.getItem('results') === [])\r\n                {\r\n                    const response = await axios.get(`/api/results/game=${game}&viewers=${viewers}&language=${language}`);\r\n\r\n                    let randomNumber = Math.floor(Math.random() * response.data.length);\r\n\r\n                    localStorage.setItem('results', JSON.stringify(response.data));\r\n\r\n                    setState({ stream: JSON.parse(localStorage.getItem('results'))[randomNumber].user_login, loading: false, ...error });\r\n                }\r\n                else\r\n                {\r\n                    let randomNumber;\r\n                    \r\n                    let isLiveAndOnGame = false;\r\n\r\n                    while(isLiveAndOnGame === false)\r\n                    {\r\n                        randomNumber = Math.floor(Math.random() * JSON.parse(localStorage.getItem('results')).length);\r\n\r\n                        let results = JSON.parse(localStorage.getItem('results'));\r\n\r\n                        isLiveAndOnGame = await axios.get(`/api/stream/streamer=${results[randomNumber].user_login}&game=${game}`); \r\n\r\n                        if(isLiveAndOnGame === false)\r\n                        {\r\n                            console.log(\"False\");\r\n                            results.splice(randomNumber, 1);\r\n                            localStorage.setItem('results', JSON.stringify(results));\r\n                        }\r\n                    }\r\n\r\n                    setState({ stream: JSON.parse(localStorage.getItem('results'))[randomNumber].user_login, loading: false, ...error });\r\n                }\r\n                // else\r\n                // {\r\n                //     const response = await axios.get(`/api/stream/game=${game}&viewers=${viewers}&language=${language}`);\r\n    \r\n                //     setState({ stream: response.data.user_name, loading: false, ...error });\r\n                // }\r\n            } \r\n            catch (err) \r\n            {\r\n                setState({ ...stream, loading: false, error: err });\r\n            }; \r\n        }\r\n          \r\n        if(loading) \r\n        {\r\n            findStream(game, viewers, language);\r\n        }\r\n\r\n    }, [stream, loading, error])\r\n\r\n    return (\r\n        <div>\r\n            {loading && \r\n                <div id=\"streamLoader\">\r\n                    <Loader\r\n                        type=\"Puff\"\r\n                        color=\"#00BFFF\"\r\n                        height={100}\r\n                        width={100}\r\n                    />\r\n                </div>\r\n            }\r\n\r\n            {!loading && stream &&\r\n                <div id=\"stream\">\r\n                    <ReactTwitchEmbedVideo \r\n                        autoFocus\r\n                        autoplay\r\n                        channel={stream}\r\n                        layout=\"video-with-chat\"\r\n                        width=\"940\"\r\n                        height=\"480\"\r\n                        onPlay={function noRefCheck(){}}\r\n                        onReady={function noRefCheck(){}}\r\n                        theme=\"dark\"\r\n                    />\r\n                </div>\r\n            }\r\n\r\n            {!stream && !loading &&\r\n                <div id=\"streamError\">\r\n                    <h1>Error: No stream found</h1>\r\n                </div>\r\n            }\r\n\r\n            {!loading &&\r\n                <div id=\"streamButtons\">\r\n                    <Link to={{pathname: `/stream`}} onClick={Refresh}>\r\n                        <Button type=\"button\" halfWidth variant=\"contained\" color=\"primary\" className=\"submit\">Find Another Stream</Button>\r\n                    </Link>\r\n                    <Link to={{pathname: `/`}}>\r\n                        <Button type=\"button\" halfWidth variant=\"contained\" color=\"primary\" className=\"submit\">Home</Button>\r\n                    </Link>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stream;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Container } from '@material-ui/core';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nimport '../styles/Results.css';\r\n\r\nfunction Results(props) \r\n{\r\n    // const [game, setGame] = useState(props.location.state.game);\r\n    // const [viewers, setViewers] = useState(props.location.state.viewers);\r\n    // const [language, setLanguage] = useState(props.location.state.language);\r\n\r\n    const [game, setGame] = useState(localStorage.getItem('game'));\r\n    const [viewers, setViewers] = useState(localStorage.getItem('viewers'));\r\n    const [language, setLanguage] = useState(localStorage.getItem('language'));\r\n\r\n    const [{ results, loading, error }, setState] = useState({ results: [], loading: true, error: null });\r\n    const [currentPageResults, setCurrentPageResults] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n    const channelsPerPage = 50;\r\n    const channelsVisited = (pageNumber - 1) * channelsPerPage;\r\n\r\n    const pageCount = Math.ceil(results.length / channelsPerPage);\r\n\r\n    const displayResults = results.slice(channelsVisited, channelsVisited + channelsPerPage).map((result) => \r\n    {\r\n        return (\r\n            <GridListTile component={Link} to={{pathname: `/stream` }} onClick={() => localStorage.setItem('channel', result.user_login)}>\r\n                <img src={result.thumbnail_url} alt=\"Thumbnail\"/>\r\n                <GridListTileBar\r\n                    title={result.title}\r\n                    subtitle={<span>{result.user_name} ({result.viewer_count} viewers)</span>}\r\n                />\r\n            </GridListTile>\r\n        );\r\n    });\r\n\r\n    useEffect(() => \r\n    {\r\n        localStorage.removeItem('channel');\r\n\r\n        const findResults = async (game, viewers) =>\r\n        {\r\n            try \r\n            {\r\n                const response = await axios.get(`/api/results/game=${game}&viewers=${viewers}&language=${language}`);\r\n\r\n                setState({ results: response.data, loading: false, ...error });\r\n                setCurrentPageResults(response.data.slice(channelsVisited, channelsVisited + channelsPerPage));\r\n            } \r\n            catch (err) \r\n            {\r\n                setState({ ...results, loading: false, error: err });\r\n            }; \r\n        }\r\n          \r\n        if(loading) \r\n        {\r\n            findResults(game, viewers);\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n            <div>\r\n                {loading && \r\n                    <div id=\"resultsLoader\">\r\n                        <Loader\r\n                            type=\"Puff\"\r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                {results.length === 0 && !loading &&\r\n                    <div id=\"resultsError\">\r\n                        <h1>Error: No results found</h1>\r\n                    </div>\r\n                }\r\n\r\n                {results.length !== 0 && !loading &&\r\n                    <Container style={{paddingTop: \"50px\", paddingBottom: \"50px\"}}>\r\n                        <GridList container cols={5}>\r\n                            {displayResults}\r\n                        </GridList>\r\n                        <div className=\"pagination\">\r\n                            <Pagination count={pageCount} page={pageNumber} onChange={(event, value) => { setPageNumber(value); }}/>\r\n                        </div>\r\n                    </Container>\r\n                }\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Results;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({ component: Component, ...rest }) \r\n{\r\n    // return (\r\n    //     <Route {...rest} render={ props => \r\n    //             {\r\n    //                 if(game) \r\n    //                 {\r\n    //                     console.log(game);\r\n    //                     console.log(...props);\r\n    //                     return <Component {...rest} {...props}/>\r\n    //                 } \r\n    //                 else \r\n    //                 {\r\n    //                     console.log(game);\r\n    //                     return <Redirect to={{ pathname: '/', state: { from: props.location }}}/>\r\n    //                 }\r\n    //             }\r\n    //         } \r\n    //     />\r\n    // )\r\n\r\n    let game = localStorage.getItem('game');\r\n\r\n    return (\r\n        <Route {...rest} render={ props => \r\n            (\r\n                game !== '' \r\n                ? \r\n                (\r\n                    <Component  {...props} />\r\n                ) \r\n                : \r\n                (\r\n                    <Redirect to={{pathname: '/', state: { from: props.location }}}/>\r\n                )\r\n            )} \r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\n\r\nimport '../styles/NotFound.css';\r\n\r\nfunction NotFound() \r\n{\r\n    return (\r\n        <div id=\"NotFound\">\r\n            <h1>404 - Not Found!</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport TitleAppBar from './components/TitleAppBar';\nimport InputForm from './components/InputForm';\nimport Stream from './components/Stream';\nimport Results from './components/Results';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport NotFound from './components/NotFound';\n\nfunction App() \n{\n  return (\n    <ThemeProvider>\n      <CssBaseline style={{height: '100vh'}}>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Router>\n              <TitleAppBar/>\n              <Switch>\n                <Route exact path=\"/\" component={InputForm}/>\n                <ProtectedRoute exact path=\"/stream\" component={props => <Stream {...props}/>} />\n                <ProtectedRoute exact path=\"/results\" component={props => <Results {...props}/>} />\n                <Route component={NotFound} />\n\n                {/* <Route exact path=\"/stream\" component={Stream}/> */}\n                {/* <Route exact path=\"/results\" component={Results} /> */}\n              </Switch>\n            </Router>\n          </div>   \n        </div>\n      </CssBaseline>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}